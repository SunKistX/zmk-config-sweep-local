// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>


#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5
// Define custom behaviors
&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;    // Adjust this value to change tap timing
    quick-tap-ms = <150>;       // Tap-twice-quickly timing
    hold-trigger-key-positions = <0>;  // Trigger hold immediately when pressing other keys
};

&sk {
    release-after-ms = <2000>;  // Sticky key timeout
    quick-release;              // Release sticky key on next key press
};

/ {
    chosen { zmk,charmap = &charmap_us; };
    &sk {
    	// don't release mods on other mods presses
    	ignore-modifiers;
    };
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        sk: sk {
            compatible = "zmk,behavior-sticky-key";
            label = "SK";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <500>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
        combos {
        
            compatible = "zmk,combos";
        
            // Example: Press Q+W for Escape
            combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
        // Example: Press F+P for Tab
        combo_tab {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp TAB>;
        };

        // Example: Press A+S for Sticky Shift
        combo_sticky_shift {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&sk LSHFT>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W           &kp F        &kp P        &kp B        &kp J      &kp L            &kp U        &kp Y       &kp SQT
&kp A  &ht LEFT_ALT R  &ht LCTRL S  &ht LCMD T   &kp G        &kp M      &ht RIGHT_WIN N  &ht RCTRL E  &ht RALT I  &kp O
&kp Z  &kp X           &kp C        &kp D        &kp V        &kp K      &kp H            &kp COMMA    &kp DOT     &kp SLASH
                                    &lt LEF TAB  &kp LSHFT    &kp SPACE  &lt RIG TAB
            >;
        };

        windows_layer {
            bindings = <
&kp Q  &kp W  &kp F  &kp P        &kp B        &kp J      &kp L        &kp U      &kp Y    &kp SQT
&kp A  &kp R  &kp S  &kp T        &kp G        &kp M      &kp N        &kp E      &kp I    &kp O
&kp Z  &kp X  &kp C  &kp D        &kp V        &kp K      &kp H        &kp COMMA  &kp DOT  &kp SLASH
                     &lt LEF TAB  &kp LSHFT    &kp SPACE  &lt RIG TAB
            >;
        };

        right_layer {
            bindings = <
&kp N1     &kp N2        &kp N3     &kp N4        &kp N5        &kp N6    &kp N7     &kp N8     &kp N9     &kp N0
&kp DEL    &sk LEFT_ALT  &sk LCTRL  &sk LEFT_GUI  &sk LSHFT     &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp BACKSPACE
&kp LC(Z)  &kp LC(X)     &kp LC(C)  &kp K_REDO    &kp LC(V)     &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp ENTER
                                    &trans        &kp ESCAPE    &trans    &trans
            >;
        };

        left_layer {
            bindings = <
&kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS   &kp ASTRK  &kp GRAVE  &kp TILDE
&kp DQT   &kp LBKT  &kp LBRC  &kp LPAR  &none        &kp FSLH    &kp MINUS  &kp EQUAL  &kp COLON  &kp SEMI
&kp SQT   &kp RBKT  &kp RBRC  &kp RPAR  &none        &kp BSLH    &kp UNDER  &kp PLUS   &kp PIPE   &kp QMARK
                              &trans    &trans       &tog MOUSE  &trans
            >;
        };

        tri_layer {
            bindings = <
&kp CAPS  &none  &out OUT_USB  &bt BT_SEL 2  &bt BT_SEL 0    &none   &none          &none           &kp C_MUTE    &kp C_PREV
&none     &none  &out OUT_BLE  &bt BT_SEL 3  &bt BT_SEL 1    &none   &kp C_BRI_UP   &studio_unlock  &kp C_VOL_UP  &kp C_PP
&tog 1    &none  &out OUT_TOG  &bt BT_SEL 4  &bt BT_CLR      &none   &kp C_BRI_DEC  &none           &kp C_VOL_DN  &kp C_NEXT
                               &trans        &trans          &trans  &trans
            >;
        };

        mouse {
            bindings = <
&tog MOUSE   &mkp MB4  &mkp MCLK  &mkp MB5   &trans        &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &tog MOUSE
&trans       &trans    &trans     &trans     &trans        &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&bootloader  &trans    &trans     &trans     &trans        &trans          &mkp MB4        &mkp MCLK     &mkp MB5         &bootloader
                                  &kp SPACE  &kp LSHIFT    &mkp LCLK       &mkp RCLK
            >;
        };
    };
};
